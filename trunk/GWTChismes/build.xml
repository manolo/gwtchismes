<!--
/*
 * Copyright 2007 Manuel Carrasco MoÃ±ino. (manuel_carrasco at users.sourceforge.net) 
 * http://code.google.com/p/gwtchismes
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
-->

<project name="GWT Project" default="jar">

	<property name="project" value="gwtchismes" />
	<property name="version" value="0.9.1" />

	<property environment="env" />
	<property name="gwt.dir" value="${env.GWT_HOME}" />
	<property name="gwt.user.jar" value="${gwt.dir}/gwt-user.jar" />
	<property name="gwt.dev.jar" value="${gwt.dir}/gwt-dev-linux.jar" />
	<property name="gwt.servlet.jar" value="${gwt.dir}/gwt-servlet.jar" />

	<property name="src.dir" value="src" />
	<property name="tmp.dir" value="${project}-${version}" />
	<property name="class.dir" value="${tmp.dir}/class" />
	<property name="doc.dir" value="${tmp.dir}/doc" />
	<property name="www.dir" value="${tmp.dir}/www" />

	<property name="package.dir" value="com/google/code/p/gwtchismes" />
	<property name="package.name" value="com.google.code.p.gwtchismes" />
	<property name="sample.dir" value="com/google/code/p/gwtcsample" />
    <property name="newsample.dir" value="com/google/code/p/newsample" />
	<property name="sample.module" value="com.google.code.p.gwtcsample.GWTCSample" />
    <property name="newsample.module" value="com.google.code.p.newsample.newsample" />

	<path id="compile.lib.classpath">
		<pathelement location="${gwt.user.jar}" />
	</path>
	<path id="compile.sample.classpath">
		<pathelement location="${src.dir}" />
		<pathelement location="${gwt.user.jar}" />
		<pathelement location="${gwt.servlet.jar}" />
		<pathelement location="${gwt.dev.jar}" />
	</path>

	<target name="jar" depends="compress" description="Generates the jar distribution file">
		<delete dir="${project}-${version}" />
		<delete file="${project}-${version}.jar" />
		<mkdir dir="${class.dir}" />
		<javac srcdir="${src.dir}" excludes="${sample.dir}/**, ${newsample.dir}/**" destdir="${class.dir}" target="1.5"
		       deprecation="off" debug="on" fork="true" encoding="UTF-8">
			<classpath refid="compile.lib.classpath" />
		</javac>
		<copy todir="${class.dir}">
			<fileset dir="${src.dir}" excludes="${sample.dir}/**, ${newsample.dir}/**" />
		</copy>
		<copy todir="${class.dir}" file="LICENSE" />
		<jar jarfile="${project}-${version}.jar" basedir="${class.dir}" />
		<!-- <delete dir="${class.dir}" /> -->
	</target>

			 <!-- use="false" nohelp="true" nonavbar="true"
                         nodeprecatedlist="true" -->
	<target name="javadoc" description="Generates de Java documentation files for the project">
		<delete dir="${doc.dir}" />
		<javadoc sourcepath="${src.dir}" packagenames="${package.name}.*" 
                         excludepackagenames="${sample.module}.*, ${newsample.module}.*" 
                         destdir="${doc.dir}" 
                         encoding="UTF-8" charset="UTF-8" author="true" version="true" windowtitle="GWTChismes"
			>
			<classpath refid="compile.sample.classpath" />
		</javadoc>
	</target>

	<target name="sample" depends="i18n" description="Generates the static javascript files needed for deploy the provided example">
		<echo message="Compiling sample code from java to javascript" />
		<java classname="com.google.gwt.dev.GWTCompiler" fork="yes" failonerror="true" classpathref="compile.sample.classpath">
			<sysproperty key="ENCODING" value="UTF-8"/>
			<arg value="-style"/>
			<arg value="OBFUSCATED"/>
			<arg value="-out" />
			<arg file="${www.dir}" />
			<arg value="${sample.module}" />
		</java>
	</target>

	<target name="i18n" description="Synchronizes gwt-i18n properties files with class">
		<echo message="Synchronizing properties files" />
		<java classname="com.google.gwt.i18n.tools.I18NSync" fork="yes" failonerror="true" classpathref="compile.sample.classpath">
			<arg value="-out" />
			<arg value="src" />
			<arg value="com.google.code.p.gwtcsample.client.GWTCSampleI18n" />
		</java>
	</target>
        <target name="compress" description="Compresses css main file">
		<exec dir="." executable="perl">
			<arg line="css_compress.pl -compressed src/com/google/code/p/gwtchismes/public/GWTC.css"/>
		</exec>
        </target>

	<target name="zip" depends="jar, javadoc, sample" description="Generates the distibution file that includes the source, license, docs, and jar">
		<delete file="${project}-${version}.zip" />
		<copy todir="${project}-${version}/${src.dir}">
			<fileset dir="${src.dir}" />
		</copy>
		<copy todir="${project}-${version}/" file="${project}-${version}.jar" />
		<copy todir="${project}-${version}/" file="LICENSE" />
		<copy todir="${project}-${version}/" file="build.xml" />
		<copy todir="${project}-${version}/" file=".classpath" />
		<copy todir="${project}-${version}/" file=".project" />
		<echo message="Creating distribution file: ${project}-${version}.zip" />
		<exec dir="." executable="zip">
			<arg line="-q -r ${project}-${version}.zip ${project}-${version}" />
		</exec>
		<!-- <delete dir="${project}-${version}" /> -->
	</target>

	<target name="clean">
		<delete dir="${class.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${project}-${version}" />
		<delete file="${project}-${version}.jar" />
		<delete file="${project}-${version}.zip" />
		<delete dir ="build"/>
		<delete dir ="sample"/>
		<delete dir ="javadoc"/>
		<delete dir =".gwt-cache"/>
		<delete dir =".gwt"/>
		<delete dir ="tomcat"/>
		<delete dir ="www"/>
                <delete><fileset dir="." includes="*log"/></delete>
	</target>

	<target name="all" depends="clean, jar, javadoc" />
	<target name="distribution" depends="clean, zip, clean" />
         <target name="install">
             <exec dir="." executable="mvn">
                <arg line="deploy:deploy-file" />
                <arg line="-DgroupId=gwtchismes
                           -DartifactId=${project}
                           -DrepositoryId=mirai
                           -Durl=http://draco:8080/archiva/repository/internal/
                           -Dfile=${project}-${version}.jar
                           -Dversion=${version} -Dpackaging=jar
                           -DgeneratePom=true"
                           />
             </exec>
         </target>
</project>
