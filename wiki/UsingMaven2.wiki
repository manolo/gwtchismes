Create a new application and use GWTChismes with maven 2.

= Using gwtchismes in a maven project =

GWTChismes library is published using a [http://code.google.com/p/gwtchismes/source/browse/#svn/trunk/mavenrepo maven2-repo] structure in svn.
So it is easy to setup use gwtchismes in a maven project just adding the repository and the dependency to the pom.xml
{{{
 <project>
   [...]
   <repositories>
      [...]
      <repository>
        <id>gwtchismes</id>
        <url>http://gwtchismes.googlecode.com/svn/trunk/website/mavenrepo/</url>
      </repository>
    </repositories>
    <dependencies>
      [...]
      <dependency>
        <groupId>gwtchismes</groupId>
        <artifactId>gwtchismes</artifactId>
        <version>0.9.4</version>
        <scope>provided</scope>
      </dependency>
   </dependencies>
 </project>
}}}


= Creating a new gwtchismes project from scratch using maven =

 # Create a new project using gwt-maven archetype and change to the generated folder
{{{
 $ mvn archetype:create -DarchetypeGroupId=com.totsp.gwt \
    -DarchetypeArtifactId=maven-googlewebtoolkit2-archetype \
    -DarchetypeVersion=1.0.4 \
    -DremoteRepositories=http://gwt-maven.googlecode.com/svn/trunk/mavenrepo \
    -DgroupId=com.foo \
    -DartifactId=myApplication
 $ cd myApplication
}}}
 # Modify the generated pom.xml in order to:
   * use the appropriate gwt version.
{{{
  <properties>
      <gwtVersion>1.7.0</gwtVersion>
  </properties>
}}}
   * include the gwtchismes repository
{{{
   <repositories>
      <repository>
        <id>gwtchismes</id>
        <url>http://gwtchismes.googlecode.com/svn/trunk/website/mavenrepo/</url>
      </repository>
    </repositories>
}}}
   * add gwtchismes' dependency
{{{
    <dependencies>
     <dependency>
       <groupId>gwtchismes</groupId>
       <artifactId>gwtchismes</artifactId>
       <version>0.9.4</version>
       <scope>provided</scope>
     </dependency>
   </dependencies>
}}}
 # Configure your project as an eclipse project (Optional)
{{{
 $ mvn eclipse:eclipse
}}}
 # Edit gwt module file (/src/main/java/com/foo/Application.gwt.xml) and include GwtChismes dependency
{{{
      <inherits name="com.google.code.p.gwtchismes.GWTChismes"/>
      <stylesheet src='GWTC-compressed.css' />

}}}
 # Code your application (./src/main/java/com/foo/client/Application.java)
{{{
public class Application implements EntryPoint {

  public void onModuleLoad() { 
     
     // Alert
     final GWTCAlert alert = new GWTCAlert(); 
     alert.alert("Hello, you can put here any message");

     // Rounded Box
     GWTCBox box = new GWTCBox(GWTCBox.STYLE_BLUE);
     box.setTitle("A Title");
     box.setText("Sample text");
     RootPanel.get().add(box);

     // Modal DatePicker
     int options = GWTCDatePicker.CONFIG_DIALOG 
                 | GWTCDatePicker.CONFIG_ROUNDED_BOX 
                 | GWTCDatePicker.CONFIG_BACKGROUND;
     final GWTCDatePicker picker = new GWTCDatePicker(options);
     picker.addValueChangeHandler(new ValueChangeHandler<GWTCSimpleDatePicker>() {
       public void onValueChange(ValueChangeEvent<GWTCSimpleDatePicker> event) {
         alert.alert(event.getValue().getSelectedDateStr("MMMM dd, yyyy (dddd)"));
       }
     });

     // Button to show the datepicker
     Button button = new GWTCButton("Clickme to show a modal datepicker", new ClickHandler() {
        public void onClick(ClickEvent arg0) {
          picker.show();
        }
     });
     RootPanel.get().add(button);

     // ProgressBar
     GWTCProgress prgBar = new GWTCProgress(20, GWTCProgress.SHOW_TIME_REMAINING |
                                                GWTCProgress.SHOW_NUMBERS);
     RootPanel.get().add(prgBar);
     prgBar.setText("gwt-file.jar");
     prgBar.setProgress(50); // percent     
  }
}
}}}
 # Use maven to test, run in hosted mode, package etc. your application.
{{{
 $ mvn test
 $ mvn gwt-maven:gwt
 $ mvn  -Dgoogle.webtoolkit.compileSkip=true gwt-maven:gwt
 $ mvn package
}}}